https://www.youtube.com/watch?v=ETV17M4SauU

38:02

All the components in the app folder are the server somponents by-default.

Pages router doesn't support server components

A folder in app is not accessible unless we have page file inside it.


**********************
'use client';

with this we tell the nextjs compiler to include this file or component in our javascript bundle and
that means if this component is dependent on other components, those components will automatically become
client components and will be included in our javascript bundle,
so we don't need to repeat this directive on every component.

To make our application more faster and SEO friendly, we want to render our components on server as much as possible and
use client components only when necessary.

**********************
Server vs client side:

In recent release of nextjs everything is a server component and server component don't have access to the
anything that is on the frontend.

Every thign on server side can access everything on the server side (i.e filesystem, )

And if you want to take advantage of useState, useEffect and anything that is on the frontend part of it
like windows-object, location, that is on the client side, you have to make your component as the client component.

Most of the things in the API folder, that's on the backend side (default serve compoenent)
but anything that's usually outside (not always) is usually a client component.

**********************

All the console messages in the client component will be in browser/client-side

and for the server compoenent the console messages  will be in terminal.

